<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:beans="http://www.springframework.org/schema/beans" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
    <!--此文件负责整个mvc中的配置-->
    <!-- 一定要配置在springMVC的配置类中 配置 controller的自动扫描装配-->
    <!--springMVC 做为子容器可以访问父容器（spring配置中描述的）的类，但是父容器不能使用子容器的类-->
    <!-- 自动扫描装配 -->
    <context:component-scan base-package="example.controller"/>

    <!--启用spring的一些annotation -->
    <context:annotation-config/>

    <!-- 配置注解驱动 可以将request参数与绑定到controller参数上 -->
    <!--配置一个json 消息转换器-->
    <mvc:annotation-driven content-negotiation-manager="contentManager">
        <mvc:message-converters register-defaults="true">
            <beans:bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <beans:constructor-arg value="UTF-8"/>
            </beans:bean>
            <beans:bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <beans:property name="objectMapper">
                    <beans:bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <beans:property name="dateFormat">
                            <beans:bean class="java.text.SimpleDateFormat">
                                <beans:constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss"/>
                            </beans:bean>
                        </beans:property>
                    </beans:bean>
                </beans:property>
            </beans:bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <beans:bean id="contentManager"
                class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <beans:property name="favorPathExtension" value="true"/>
        <beans:property name="ignoreAcceptHeader" value="true"/>
        <beans:property name="defaultContentType" value="application/json"/>
        <beans:property name="useJaf" value="false"/>
        <beans:property name="mediaTypes">
            <beans:map>
                <beans:entry key="json" value="application/json"/>
                <beans:entry key="html" value="text/html"/>
                <beans:entry key="xml" value="application/xml"/>
            </beans:map>
        </beans:property>

    </beans:bean>

    <!--静态资源映射-->
    <!--本项目把静态资源放在了webapp的statics目录下，资源映射如下-->
    <mvc:resources mapping="/css/**" location="/statics/css/"/>
    <mvc:resources mapping="/js/**" location="/statics/js/"/>
    <mvc:resources mapping="/image/**" location="/statics/images/"/>
    <mvc:default-servlet-handler />  <!--这句要加上，要不然可能会访问不到静态资源，具体作用自行百度-->

    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀(如果最后一个还是表示文件夹,则最后的斜杠不要漏了) 使用JSP-->
    <!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
    <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/views/"/><!--设置JSP文件的目录位置-->
        <property name="suffix" value=".jsp"/>
        <property name="exposeContextBeansAsAttributes" value="true"/>
    </bean>





    <!--controller层的aop是可以正常使用的-->
    <aop:config>
        <aop:aspect ref="logInterceptor">
            <aop:pointcut expression="execution(* example.controller.FirstController.index(..))"
                          id="controllerPointcut"/>
            <aop:before method="before"  pointcut-ref="controllerPointcut" />
        </aop:aspect>
    </aop:config>

    <!-- 定义请求处理映射HandlerMapping -->
    <!--<bean id="handlerMapping" class="example.controller.xml.XmlController">-->
        <!--&lt;!&ndash; 指定请求和Controller对应关系 &ndash;&gt;-->
        <!--<property name="mappings" ref="urlMappings" />-->
    <!--</bean>-->

    <!--&lt;!&ndash; 定义请求映射表 map &ndash;&gt;-->
    <!--<util:properties id="urlMappings">-->
        <!--<prop key="/hello.form">xmlController</prop>-->
    <!--</util:properties>-->



</beans>